image: docker:19.03.12

stages:
  - test
  - visualize
  - build
  - deploy

variables:
  CONTAINER_NAME: config-server
  ENVIRONMENT: staging

test:
  image: gradle:6.9.0-jdk11
  stage: test
  script:
    - gradle test
  artifacts:
    paths:
      - build/jacoco/jacoco.xml

coverage:
  stage: visualize
  image: registry.gitlab.com/haynes/jacoco2cobertura:1.0.7
  script:
    - python /opt/cover2cover.py build/jacoco/jacoco.xml $CI_PROJECT_DIR/src/main/java/ > build/cobertura.xml
  dependencies:
    - test
  artifacts:
    reports:
      cobertura: build/cobertura.xml

build:
  image: gradle:6.9.0-jdk11
  stage: build
  script:
    - gradle build -x test
  artifacts:
    paths:
      - build/libs/*.jar
  cache:
    key: ${CI_COMMIT_REF_SLUG}-${CI_PIPELINE_ID}
    policy: push
    paths:
      - build/libs/*.jar

build-docker-image:
  stage: build
  cache:
    key: ${CI_COMMIT_REF_SLUG}-${CI_PIPELINE_ID}
    policy: pull
    paths:
      - build/libs/*.jar
  script:
    - docker login -u $DOCKER_HUB_ID -p $DOCKER_HUB_PASSWORD
    - docker build -t $DOCKER_HUB_ID/$IMAGE_NAME .
    - docker push $DOCKER_HUB_ID/$IMAGE_NAME
  environment:
    name: $ENVIRONMENT


deploy-container:
  stage: deploy
  script:
    - docker pull $DOCKER_HUB_ID/$IMAGE_NAME
    - "{ docker stop $CONTAINER_NAME; docker rm $CONTAINER_NAME; } || true"
    - "docker run -d -p $CONFIG_SERVER_PORT:$CONFIG_SERVER_PORT \
    --network $DOCKER_MESH_NETWORK \
    --name $CONTAINER_NAME \
    -e HOST_IP=$HOST_IP \
    -e RABBIT_MQ_PORT=$RABBIT_MQ_PORT \
    -e RABBIT_MQ_USERNAME=$RABBIT_MQ_USERNAME \
    -e RABBIT_MQ_PASSWORD=$RABBIT_MQ_PASSWORD \
    -e GITLAB_CONFIG_SERVER_URL=$GITLAB_CONFIG_SERVER_URL \
    -e GITLAB_USERNAME=$GITLAB_USERNAME \
    -e GITLAB_PASSWORD=$GITLAB_PASSWORD \
    $DOCKER_HUB_ID/$IMAGE_NAME"

  environment:
    name: $ENVIRONMENT
    url: $STAGING_SERVER